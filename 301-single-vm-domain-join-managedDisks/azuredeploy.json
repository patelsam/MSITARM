{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "vmName": {
      "type": "string",
      "defaultValue": "",
      "minLength": 3,
      "metadata": {
        "description": "Name for the Virtual Machine."
      }
    },
    "localAdminUserName": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "Local admin Username for the Virtual Machine."
      }
    },
    "localAdminPassword": {
      "type": "securestring",
      "minLength": 1,
      "metadata": {
        "description": "Local admin Password for the Virtual Machine."
      }
    },
    "domainJoinUserName": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "Account for domain joining, ex. Domain\\serviceaccount"
      }
    },
    "domainJoinPassword": {
      "type": "securestring",
      "minLength": 1,
      "metadata": {
        "description": "Password for domain joining"
      }
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "Size for the Virtual Machine. Details: https://docs.microsoft.com/en-us/azure/virtual-machines/virtual-machines-linux-sizes?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json#standard-tier-d-series"
      }
    },
    "imagePublisher": {
      "type": "string",
      "defaultValue": "MicrosoftWindowsServer",
      "allowedValues": [
        "MicrosoftWindowsServer"
      ],
      "metadata": {
        "description": "OS Image Publisher. https://azure.microsoft.com/en-us/documentation/articles/virtual-machines-linux-cli-ps-findimage/"
      }
    },
    "imageOffer": {
      "type": "string",
      "defaultValue": "WindowsServer",
      "allowedValues": [
        "WindowsServer"
      ],
      "metadata": {
        "description": "See image publisher notes for details"
      }
    },
    "sku": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "2012-R2-Datacenter",
      "allowedValues": [
        "2008-R2-SP1",
        "2012-R2-Datacenter",
        "2016-Datacenter"
      ],
      "metadata": {
        "description": "Find available skus from PowerShell, https://docs.microsoft.com/en-us/powershell/resourcemanager/azurerm.compute/v1.3.4/Get-AzureRmVMImageSku?redirectedfrom=msdn"
      }
    },
    "StorageAccountType": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Standard_LRS",
        "Premium_LRS"
      ],
      "metadata": {
        "description": "Storage performance, Standard_LRS for standard skus and Premium_LRS for premium skus"
      }
    },
    "DiskConfig": {
      "type": "string",
      "defaultValue": "Win",
      "allowedValues": [
        "Win",
        "IIS"
      ],
      "metadata": {
        "description": "Choose Windows or IIS VM"
      }
    },
    "DiskCount": {
      "type": "string",
      "allowedValues": [
        "0",
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "7",
        "8",
        "9",
        "10",
        "11",
        "12",
        "13",
        "14",
        "15",
        "16"
      ],
      "defaultValue": "1",
      "metadata": {
        "description": "Number of Data Disks to be attached to VM."
      }
    },
    "DiskSize": {
      "type": "int",
      "defaultValue": 32,
      "minValue": 10,
      "maxValue": 4096,
      "metadata": {
        "Description": "Size of Data Disk(s) attached to the VM in GB, Min of 10 and Max of 4096"
      }
    },
    "domainName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The FQDN of the AD domain"
      }
    },
    "ouPath": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The Organizational Unit the VM will join"
      }
    },
    "CiOwner": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "",
      "metadata": {
        "description": "CiOwner tag for the Virtual Machine. use your Alias, Domain\\[Alias]"
      }
    },
    "CiAnalystGroup": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "",
      "metadata": {
        "description": "CiAnalystGroup tag for the Virtual Machine. Please contact your Cloud Lead if you don't know this value.  Format: Config Analyst: Org1 - Org2 -Org3 - Org4"
      }
    },
    "appID": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "",
      "metadata": {
        "description": "appID tag for the Virtual Machine."
      }
    },
    "orgID": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "",
      "metadata": {
        "description": "orgID tag for the Virtual Machine."
      }
    },
    "env": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "environment tag for the Virtual Machine."
      }
    },
    "localAdmins": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Users and groups added to the local administrator group."
      }
    },
    "virtualNetwork": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Name for the VirtualNetwork"
      }
    },
    "vnetResourceGroup": {
      "type": "string",
      "defaultValue": "ERNetwork",
      "metadata": {
        "description": "Name for the Resource Group that contains VirtualNetwork."
      }
    },
    "subnetName": {
      "type": "string",
      "defaultValue": "Subnet-1",
      "metadata": {
        "description": "Name for the subnet"
      }
    },
    "FederalWorkspaceID": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The Federal Workspace ID to join"
      }
    },
    "FederalWorkspaceKey": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The Federal Workspace key to use to join"
      }
    },
    "UserWorkspaceID": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The City Workspace ID to join"
      }
    },
    "UserWorkspaceKey": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The City Workspace key to use to join"
      }
    },
    "PullServerRegistrationKey": {
      "type": "string",
      "metadata": {
        "description": "The key for the Pull server the VM will join"
      }
    },
    "PullServerRegistrationURI": {
      "type": "string",
      "metadata": {
        "description": "The pull server URI"
      }
    },

    "AzureDiskEncryption": {
      "type": "string",
      "defaultValue": "Yes",
      "allowedValues": [
        "Yes",
        "No"
      ],
      "metadata": {
        "description": "Will use the following GroupId, OjectId, clientId and ClientSecret to Enable Azure Disk Encryption with KeyVault"
      }
    },
    "groupid": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Object Id of the AAD Group that will have access use the vault for this deployment. "

      }
    },
    "objectid": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Object Id of the AAD user or service principal that will have access to the vault for Azure Disk Encryption. Available from the Get-AzureRMADUser or the Get-AzureRMADServicePrincipal cmdlets"

      }
    },
    "clientid": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "ApplicationID for the AAD application"
      }
    },
    "clientsecret": {
      "type": "securestring",
      "defaultValue": "",
      "metadata": {
        "description": "clientsecret for the AAD application"
      }
    },
    "UseExistingKey": {
      "type": "string",
      "defaultValue": "No",
      "allowedValues": [
        "Yes",
        "No"
      ],
      "metadata": {
        "description": "Will use the following Key URL for disk encryption."
      }
    },
    "ExistingKey": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Will Use existing Keyvault URI for encryption."
      }
    }
  },
  "variables": {
    "apiVersion": "2015-01-01",

    "branch": "develop",
    "scriptsURL": "[concat('https://raw.githubusercontent.com/Microsoft/MSITARM/',variables('branch'),'/all-scripts/')]",
    "nestedURL": "[concat('https://raw.githubusercontent.com/Microsoft/MSITARM/',variables('branch'),'/all-nested/')]",

    "createVMtemplate": "template-SingleVM-ManagedDisks.json",
    "configurePullTemplate": "template-ConfigureDscPull.json",

    "Role": "[substring(parameters('DiskConfig'),0,3)]",

    "CreateVMUrl": "[concat(variables('nestedURL'),variables('createVMtemplate'))]",
    "AttachVMtoPullServerURL": "[concat(variables('nestedURL'),variables('configurePullTemplate'))]",
    "BuildMachineRoleURL": "[concat(variables('nestedURL'),'template-Build',variables('Role'), '.json')]",
    "DiskEncryptionUrl": "[concat(variables('nestedURL'), 'template-DiskEncryption.json')]",
    
    "AzureAutomation": {
      "Url": "https://github.com/Azure/azure-quickstart-templates/raw/master/dsc-extension-azure-automation-pullserver/UpdateLCMforAAPull.zip",
      "RegistrationKey": "[parameters('PullServerRegistrationKey')]",
      "registrationUrl": "[parameters('PullServerRegistrationURI')]",
      "nodeConfigurationName": "MSITNoPAK.ISRM_GC",
      "configurationFunction": "UpdateLCMforAAPull.ps1\\ConfigureLCMforAAPull",
      "timestamp": "1/1/2015"
    }

  },
  "resources": [
    {
      "apiVersion": "2015-01-01",
      "name": "[concat(parameters('vmName'),'-CreateVM')]",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('CreateVMUrl')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "localAdminUserName": {
            "value": "[parameters('localAdminUserName')]"
          },
          "localAdminPassword": {
            "value": "[parameters('localAdminPassword')]"
          },
          "domainJoinUserName": {
            "value": "[parameters('domainJoinUserName')]"
          },
          "domainJoinPassword": {
            "value": "[parameters('domainJoinPassword')]"
          },
          "vmName": {
            "value": "[parameters('vmName')]"
          },
          "StorageAccountType": {
            "value": "[parameters('StorageAccountType')]"
          },
          "DiskConfig": {
            "value": "[parameters('DiskConfig')]"
          },
          "vmSize": {
            "value": "[parameters('vmSize')]"
          },
          "DiskCount": {
            "value": "[parameters('DiskCount')]"
          },
          "DiskSize": {
            "value": "[parameters('DiskSize')]"
          },
          "numberOfInstances": {
            "value": 1
          },
          "imagePublisher": {
            "value": "[parameters('imagePublisher')]"
          },
          "imageOffer": {
            "value": "[parameters('imageOffer')]"
          },
          "sku": {
            "value": "[parameters('sku')]"
          },
          "domainName": {
            "value": "[parameters('domainName')]"
          },
          "CiOwner": {
            "value": "[parameters('CiOwner')]"
          },
          "CiAnalystGroup": {
            "value": "[parameters('CiAnalystGroup')]"
          },
          "appID": {
            "value": "[parameters('appID')]"
          },
          "orgID": {
            "value": "[parameters('orgID')]"
          },
          "env": {
            "value": "[parameters('env')]"
          },
          "localAdmins": {
            "value": "[parameters('localAdmins')]"
          },
          "SQLAdmins": {
            "value": ""
          },
          "virtualNetwork": {
            "value": "[parameters('virtualNetwork')]"
          },
          "vnetResourceGroup": {
            "value": "[parameters('vnetResourceGroup')]"
          },
          "subnetName": {
            "value": "[parameters('subnetName')]"
          },
          "ouPath": {
            "value": "[parameters('ouPath')]"
          },
          "FederalWorkspaceID": {
            "value": "[parameters('federalWorkspaceID')]"
          },
          "federalWorkspaceKey": {
            "value": "[parameters('federalWorkspaceKey')]"
          },
          "UserWorkspaceID": {
            "value": "[parameters('UserWorkspaceID')]"
          },
          "UserWorkspaceKey": {
            "value": "[parameters('UserWorkspaceKey')]"
          },
          "AzureDiskEncryption": {
            "value": "[parameters('AzureDiskEncryption')]"
          },
          "groupid": {
            "value": "[parameters('groupid')]"
          },
          "objectid": {
            "value": "[parameters('objectid')]"
          },
          "clientid": {
            "value": "[parameters('clientid')]"
          },
          "clientsecret": {
            "value": "[parameters('clientsecret')]"
          }
        }
      }
    },
    {
      "apiVersion": "2015-01-01",
      "name": "[concat(parameters('vmName'),'-BuildMachineRole-',variables('Role'))]",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('BuildMachineRoleURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "vmName": {
            "value": "[parameters('vmName')]"
          },
          "DiskConfig": {
            "value": "[parameters('DiskConfig')]"
          },
          "vmSize": {
            "value": "[parameters('vmSize')]"
          },
          "DiskCount": {
            "value": "[parameters('DiskCount')]"
          },
          "DiskSize": {
            "value": "[parameters('DiskSize')]"
          }
        }
      },
      "dependsOn": [
        "[concat('Microsoft.Resources/deployments/',parameters('vmName'), '-CreateVM')]"
      ]
    },
    {
      "apiVersion": "2016-02-01",
      "Condition": "[equals(parameters('AzureDiskEncryption'),'Yes')]",
      "name": "[concat(parameters('vmName'),'-DiskEncryption')]",
      "type": "Microsoft.Resources/deployments",
      "dependsOn": [
        "[concat('Microsoft.Resources/deployments/',parameters('vmName'),'-BuildMachineRole-',substring(parameters('DiskConfig'),0,3))]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('DiskEncryptionUrl')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {

          "vmName": {
            "value": "[parameters('vmName')]"
          },
          "vaultName": {
            "value": "[parameters('vaultName')]"
          },
          "AzureDiskEncryption": {
            "value": "[parameters('AzureDiskEncryption')]"
          },
          "UseExistingKek": {
            "value": "[parameters('UseExistingKey')]"
          },
          "keyEncryptionKeyURL": {
            "value": "[parameters('ExistingKey')]"
          },
          "AADClientID": {
            "value": "[parameters('clientid')]"
          },
          "AADClientSecret": {
            "value": "[parameters('clientsecret')]"
          }
        }
      }
    },
    {
      "apiVersion": "2015-01-01",
      "name": "[concat(parameters('vmName'),'-AttachVMtoPullServer')]",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('AttachVMtoPullServerURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "vmName": {
            "value": "[parameters('vmName')]"
          },

          "RegistrationKey": {
            "value": "[variables('AzureAutomation').RegistrationKey]"
          },
          "registrationUrl": {
            "value": "[variables('AzureAutomation').registrationUrl]"
          },
          "nodeConfigurationName": {
            "value": "[variables('AzureAutomation').nodeConfigurationName]"
          },
          "timestamp": {
            "value": "[variables('AzureAutomation').timestamp]"
          }
        }
      },
      "dependsOn": [
        "[concat('Microsoft.Resources/deployments/',parameters('vmName'),'-BuildMachineRole-',variables('Role'))]"
      ]
    }
  ]
}